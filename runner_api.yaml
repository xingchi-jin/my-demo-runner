openapi: 3.0.3
info:
  title: Delegate Runner
  description: This is the API for Delegate Runner
  version: 1.0.11
externalDocs:
  description: Delegate Runner APIs
  url: https://developer.harness.io/
servers:
- url: https://app.harness.io
tags:
- name: runner
  description: Runner APIs
paths:
  /executionInfrastructure:
    post:
      tags:
      - runner
      summary: Add a execution infrastructure
      description: Add a new execution infrastructure
      operationId: createExecutionInfra
      requestBody:
        description: Create a new execution infrastructure
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executionInfrastructure'
        required: true
      responses:
        "200":
          description: Successful operation
        "405":
          description: Invalid input
  /execution:
    post:
      tags:
      - runner
      summary: Do an execution
      description: Do an execution
      operationId: execute
      requestBody:
        description: Do an execution
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/execution'
        required: true
      responses:
        "200":
          description: Successful operation
        "405":
          description: Invalid input
components:
  schemas:
    execution:
      type: object
      properties:
        id:
          type: string
          description: "ID of this execution"
        infraId:
          type: string
          description: "ID of the infra to use"
        detach:
          type: boolean
          description: "background step need it to be true"
        mountDockerSocket:
          type: boolean
          description: "Mount docker socket of the runner's"
        logConfig:
          $ref: '#/components/schemas/logConfig'
        envs:
          type: string
          additionalProperties:
            type: string
        workDir:
          type: string
          description: From which path to execute commands
        secrets:
          type: string
          description: "All descrypted secrets. Log will be sanitized with these secrets"
          additionalProperties:
            type: string
        runConfig:
          $ref: '#/components/schemas/runConfig'
        imagePull:
          $ref: '#/components/schemas/imagePull'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/volume'
        files:
          type: array
          items:
            $ref: '#/components/schemas/file'
        network:
          $ref: '#/components/schemas/networksToAttach'
        
    executionInfrastructure:
      type: object
      properties:  # put harness ids into an optional object
        projectId:
          type: string
        orgId:
          type: string
        accountId:
          type: string
        pipelineId:
          type: string
        stageRuntimeId:
          type: string
        stageId:
          type: string
        correlationId:
          type: string
          description: id of the statemachine entity from harness delegate
        mountDockerSocket:
          type: boolean
          description: "Mount docker socket of the runner's"
        privileged:
          type: boolean
        pool:
          $ref: '#/components/schemas/resourcePoolIdentifier'
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags applied to the execution infrastructure being created.
        logConfig:
          $ref: '#/components/schemas/logConfig'
        network:
          $ref: '#/components/schemas/network'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/volume'
        files:
          type: array
          items:
            $ref: '#/components/schemas/file'
        secrets:
          type: string
          description: "All descrypted secrets. Log will be sanitized with these secrets"
          additionalProperties:
            type: string
        envs:
          type: string
          additionalProperties:
            type: string
        attributes:
          type: string
          additionalProperties:
            type: string
          description: additional key-value attributes
          example:
            git_username: xingchi.jin
            api_key: ghp_xxxxxx
    resourcePoolIdentifier:
      type: object
      properties:
        id:
          maxLength: 50
          type: string
          description: allocate execution infrastructure from the resource pool identified
            by "id".
        fallbackIds:
          maxItems: 5
          type: array
          description: allocate execution infrastructure from the fallback pools when
            the one identified by "id" does not work.
          items:
            type: string
    logConfig:
      type: object
      properties:
        url:
          type: string
          format: uri
        logKey:
          type: string
        token:
          maxLength: 50
          type: string
        indirectUpload:
          type: boolean
          description: Whether to directly upload via signed link or using log stream
            service
    volume:
      type: object
      properties:
        emptyDir:
          $ref: '#/components/schemas/emptyDir'
        hostPath:
          $ref: '#/components/schemas/hostPath'
    emptyDir:
      type: object
      properties:
        volumeId:
          maxLength: 30
          type: string
        name:
          maxLength: 30
          type: string
        medium:
          type: string
        sizeLimit:
          maximum: 1000000000
          type: integer
        labels:
          type: object
          additionalProperties:
            type: string
    hostPath:
      type: object
      properties:
        volumeId:
          maxLength: 30
          type: string
        name:
          maxLength: 30
          type: string
        path:
          type: string
          format: uri-reference
        labels:
          type: object
          additionalProperties:
            type: string
    file:
      type: object
      properties:
        path:
          type: string
          format: uri-reference
        mode:
          maxLength: 4
          type: string
          example: "0777"
        data:
          maxLength: 10000000
          type: string
        isDir:
          type: boolean
    network:
      type: object
      properties:
        id:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        options:
          type: object
          additionalProperties:
            type: string
# execution components
    runConfig:
      type: object
      properties:
        command:
          type: array
          items:
            type: string
        entrypoint:
          type: array
          items:
            type: string
    registryAuth:
      type: object
      properties:
        address:
          type: string
        username:
          type: string
        password:
          type: string
    imagePull:
      type: object
      properties:
        image:
          type: string
        auth:
          $ref: '#/components/schemas/registryAuth'
    networksToAttach:
      type: object
      properties:
        infraNetwork:
          type: string
        userDefinedNetworks:
          type: array
          items:
            type: string
    computeResources:
      type: object
      properties:
        cpuPeriod:
          type: integer
        cpuQuota:
          type: integer
        cpuShares:
          type: integer
        cpuSet:
          type: array
          items:
            type: string
        memLimit:
          type: integer
        memSwapLimit:
          type: integer